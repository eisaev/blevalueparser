name: Coverage

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  coverage:
    name: Code Coverage Check
    runs-on: [ubuntu-20.04, self-hosted]

    env:
      COVERAGE_PATH: ${{github.workspace}}/build/coverage
      BUILD_TYPE: Debug

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install System Dependencies
      run: sudo apt install -y gcovr ninja-build

    - name: Configure CMake
      run: cmake -G Ninja -B ${{env.COVERAGE_PATH}} -DBUILD_BENCHMARKS=OFF -DBUILD_EXAMPLES=OFF -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_FLAGS_DEBUG="-g --coverage"

    - name: Build
      run: cmake --build ${{env.COVERAGE_PATH}} --config ${{env.BUILD_TYPE}} --target bvptest

    - name: Test
      working-directory: ${{env.COVERAGE_PATH}}/tests
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Prepare Folders
      run: mkdir -p ${{env.COVERAGE_PATH}}/xml ${{env.COVERAGE_PATH}}/html

    - name: Coverage Report
      run: gcovr --print-summary --xml ${{github.workspace}}/coverage.xml --html-details ${{env.COVERAGE_PATH}}/html/coverage.html --filter include

    - name: Coverage Summary
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '75 90'

    - name: Job Summary
      run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: html-coverage-report
        path: ${{env.COVERAGE_PATH}}/html
        if-no-files-found: error

    - name: Upload Artifacts for PR Comment
      uses: actions/upload-artifact@v3
      if: ${{github.event_name == 'pull_request'}}
      with:
        name: code-coverage-results
        path: code-coverage-results.md

  comment:
    name: Code Coverage PR Comment
    needs: coverage
    runs-on: [ubuntu-20.04, self-hosted]
    permissions:
      pull-requests: write
    if: ${{github.event_name == 'pull_request'}}
    steps:
      - name: Prepair Folder
        run: mkdir prcomment

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: code-coverage-results
          path: prcomment

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          path: prcomment/code-coverage-results.md
