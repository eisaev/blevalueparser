name: Tests

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  test:
    strategy:
      matrix:
        #OS: [ubuntu-20.04, macos-12]
        #BUILD_TYPE: [Debug, MinSizeRel]
        OS: [ubuntu-20.04]
        BUILD_TYPE: [MinSizeRel]

    runs-on: ${{matrix.OS}}

    env:
      BUILD_DIR: ${{github.workspace}}/build
      TESTS_DIR: ${{github.workspace}}/build/tests

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Ninja
      uses: seanmiddleditch/gha-setup-ninja@v3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -G Ninja -B ${{env.BUILD_DIR}} -DBUILD_EXAMPLES=OFF -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{env.BUILD_DIR}} --config ${{matrix.BUILD_TYPE}}

    - name: Test
      working-directory: ${{env.TESTS_DIR}}
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{matrix.BUILD_TYPE}} --no-compress-output --test-output-size-passed 0 --test-output-size-failed 0 --output-junit junit-${{matrix.OS}}-${{matrix.BUILD_TYPE}}.xml

    - name: Upload Test Report Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: test-report
        path: ${{env.TESTS_DIR}}/junit-*.xml
        if-no-files-found: error

#  report:
#    needs: test
#    runs-on: ubuntu-20.04
#    permissions:
#      contents: read
#      issues: read
#      checks: write
#      pull-requests: write
#    steps:
#      - name: Download Artifacts
#        uses: actions/download-artifact@v3
#        with:
#          name: test-report
#
#      - name: Publish Test Results
#        uses: EnricoMi/publish-unit-test-result-action@v2
#        if: always()
#        with:
#          junit_files: 'junit-*.xml'

  report1:
    needs: test
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      checks: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: test-report

      - name: Publish Test Results
        #uses: dorny/test-reporter@v1
        uses: eisaev/test-reporter@main
        with:
          name: ctest Tests
          path: 'junit-*.xml'
          reporter: ctest-junit

